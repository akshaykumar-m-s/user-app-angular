{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/auth/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nfunction LoginComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 10);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 10);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(_authService) {\n    this._authService = _authService;\n    this.errorFlag = false;\n    this.subscriptions = new Subscription();\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl(\"\", [Validators.required]),\n      password: new FormControl(\"\", [Validators.required])\n    });\n  }\n  loginTrigger() {\n    if (this.loginForm.valid) {\n      this._authService.login(this.loginForm.value);\n    }\n    console.log(this.loginForm.value);\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 4,\n  consts: [[1, \"relative\", \"flex\", \"min-h-screen\", \"flex-col\", \"justify-center\", \"overflow-hidden\", \"bg-gray-50\", \"py-6\", \"sm:py-12\"], [1, \"relative\", \"bg-white\", \"px-6\", \"pt-10\", \"pb-8\", \"shadow-xl\", \"ring-1\", \"ring-gray-900/5\", \"sm:mx-auto\", \"sm:max-w-lg\", \"sm:rounded-lg\", \"sm:px-10\"], [1, \"flex\", \"justify-center\", \"font-bold\", \"mb-4\"], [1, \"flex\", \"flex-col\", \"justify-around\"], [\"novalidate\", \"\", 3, \"formGroup\"], [1, \"form-group\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"placeholder\", \"Username\", \"required\", \"\"], [\"class\", \"form-text text-muted\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"flex\", \"justify-center\", 3, \"disabled\", \"click\"], [1, \"form-text\", \"text-muted\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \" User Sign In \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"mat-form-field\");\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_mat_error_9_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"mat-form-field\");\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n        return ctx.loginTrigger();\n      });\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].touched && (ctx.loginForm.controls[\"username\"].errors == null ? null : ctx.loginForm.controls[\"username\"].errors[\"required\"]));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].touched && (ctx.loginForm.controls[\"password\"].errors == null ? null : ctx.loginForm.controls[\"password\"].errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.MatInput, i5.MatFormField, i5.MatError, i6.MatButton]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}