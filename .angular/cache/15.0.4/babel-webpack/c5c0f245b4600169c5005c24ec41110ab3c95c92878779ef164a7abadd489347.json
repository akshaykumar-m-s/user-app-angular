{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(req, next) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', 'application/json');\n    headers = headers.set('Authorization', 'token');\n    headers = headers.set('Access-Control-Allow-Origin', '*');\n    const baseUrl = environment.ip + 'api' + req.urlWithParams;\n    const token = localStorage.getItem('token');\n    if (!!token) {\n      let authenticatedHeader = new HttpHeaders();\n      console.log(req.headers.has('Content-Type'));\n      console.log(req.headers.has('Accept'));\n      console.log(req.headers.keys());\n      if (!req.headers.has('Content-Type')) {\n        authenticatedHeader = authenticatedHeader.set('Content-Type', 'application/json');\n      } else {\n        req.headers.delete('Content-Type');\n      }\n      if (req.headers.has('Accept')) {\n        authenticatedHeader = authenticatedHeader.set('Accept', 'application/json');\n      } else {\n        req.headers.delete('Accept');\n      }\n      authenticatedHeader = authenticatedHeader.set('Authorization', token);\n      const authReq = req.clone({\n        headers: authenticatedHeader,\n        url: baseUrl\n      });\n      return next.handle(authReq);\n    }\n    const anonymousReq = req.clone({\n      url: baseUrl,\n      headers: headers\n    });\n    return next.handle(anonymousReq);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}